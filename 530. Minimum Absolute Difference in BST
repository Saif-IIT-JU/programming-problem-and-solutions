/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Pair
{
    int x, y;
    Pair(int x, int y)
    {
        this.x = x;
        this.y = y;
    }
}

class Solution {
    int mn = 2000000;
    
    Pair rec(TreeNode root)
    {
        if(root==null) return new Pair(2000000, -2000000);
        
        Pair left = rec(root.left);
        Pair right = rec(root.right);
        
        mn = Math.min(mn, Math.abs(root.val-left.x));
        mn = Math.min(mn, Math.abs(root.val-left.y));
        
        mn = Math.min(mn, Math.abs(root.val-right.x));
        mn = Math.min(mn, Math.abs(root.val-right.x));
        
        int min = Math.min(root.val, left.x);
        int max = Math.max(root.val, right.y);
        
        return new Pair(min, max);
        
    }
    
    public int getMinimumDifference(TreeNode root) {
        rec(root); return mn;
    }
}
