class Solution {
public:
    const static int MAXN = 100009; int c;
    vector<int>adj[MAXN], comp[MAXN], vis; string ans = "";
    
    public: string smallestStringWithSwaps(string s, vector<vector<int>> pairs) {
        
        int n = s.size(); init(n);
        
        for(int i=0; i<pairs.size(); i++)
        {
            int x = pairs[i][0];
            int y = pairs[i][1];
            
            adj[x].push_back(y);
            adj[y].push_back(x);
        }
        
        for(int i=0; i<n; i++)
        {
            if(vis[i]==0)
            {
                dfs(i);  c++;
            }
        }
        
        for(int i=0; i<c; i++)
        {
            sort(comp[i].begin(), comp[i].end());
            string temp = "";
            
            for(int j=0; j<comp[i].size(); j++)
            {
                temp+=s[comp[i][j]];
            }
            
            sort(temp.begin(), temp.end());
            
            for(int j=0; j<temp.length(); j++)
            {
                ans[comp[i][j]] = temp[j];
            }
        }
        
        return ans;
        
    }
    
    void dfs(int u)
    {
        comp[c].push_back(u); vis[u] = 1;
        
        for(int i=0; i<adj[u].size(); i++)
        {
            int v = adj[u][i];
            if(vis[v]==0)  dfs(v);
        }
    }
    
    void init(int n)
    {
        c = 0; vis.resize(MAXN);
        for(int i=0; i<n; i++) ans+=' ';
    }
};
