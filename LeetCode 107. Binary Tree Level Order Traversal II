/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int> >ans; queue<TreeNode*> q;
        if(root==NULL) return ans;
        
        q.push(root);
        while(!q.empty()){
            int cnt = q.size(); vector<int>lev;
            for(int i=0; i<cnt; i++){
                TreeNode* u = q.front(); q.pop();
                lev.push_back(u->val);
                if(u->left!=NULL) q.push(u->left);
                if(u->right!=NULL) q.push(u->right);
            }
            ans.push_back(lev);
        }
        
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
