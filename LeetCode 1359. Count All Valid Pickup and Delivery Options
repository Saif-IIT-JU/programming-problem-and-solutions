class Solution {
    long []dp[]; final long MOD = 1000000007;
    
    long solve(int n, int m)
    {
        if(n==0 && m==0) return (long)1;
        
        if(n<0 || m<0 || m<n) return (long)0;
        
        if(dp[n][m]!=-1) return dp[n][m];
        
        long ret = n*solve(n-1, m); ret%=MOD;
        ret += ((m-n)*solve(n, m-1))%MOD; ret%=MOD;
        
        return dp[n][m] = ret;
    }
    public int countOrders(int n) {
        dp = new long[501][];
        for(int i=0; i<501; i++){
            dp[i] = new long[501];
            for(int j=0; j<501; j++)
                dp[i][j] = -1;
        }
        
        long ans = solve(n, n);
        
        return (int)ans;
    }
}
