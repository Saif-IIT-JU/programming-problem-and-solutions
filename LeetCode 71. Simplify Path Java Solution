class Solution {
    public String simplifyPath(String path) {
        Stack<String>stk = new Stack<String>();
        int n = path.length(); String dir = "";
        
        for(int i=0; i<n; )
        {
            char c = path.charAt(i);
            if(c=='/'){
                i++; continue;
            }
            else{
                while(i<n && path.charAt(i)!='/'){
                    dir+=path.charAt(i); i++;
                }
                if(dir.length()==1){
                    if(dir.charAt(0)!='.'){
                        stk.push(dir);
                    }
                    dir = "";
                }
                else if(dir.length()==2){
                    if(dir.charAt(0)=='.' && dir.charAt(1)=='.')
                    {
                        if(stk.size()!=0) stk.pop();
                    }
                    else{
                        stk.push(dir);
                    }
                    
                    dir = "";
                }
                else{
                    stk.push(dir); dir = "";
                }
            }
        }
        
        path = ""; Stack<String>tmp = new Stack<String>();
        while(stk.size()>0)
        {
            tmp.push(stk.peek()); stk.pop();
        }
        
        while(tmp.size()>0){
            path+="/"; path+=tmp.peek(); tmp.pop();
        }
        if(path.length()==0) path = "/";
        
        return path;
    }
}
