/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapNodes(ListNode head, int k) {
        ListNode root = head, node1=null, node2=null;
        int n = 0;
        while(root!=null)
        {
            n++; root = root.next;
        }
        
        int c1 = k, c2 = n-k+1, c = 0; root = head;
        while(head!=null){
            c++;
            if(c==c1) node1 = head;
            if(c==c2) node2 = head;
            head = head.next;
        }
        
        int tmp = node1.val;
        node1.val = node2.val;
        node2.val = tmp;
        
        return root;
    }
}
