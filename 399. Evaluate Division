class Solution {
public:
    const static int MX = 81;
    double inf = 1e9;
    double dis[MX][MX];
    map<string, int>tab;
    
    vector<double> calcEquation(vector<vector<string>>& equations, vector<double>& values, vector<vector<string>>& queries) {
        init(); int st = 0;
        
        for(int i=0; i<equations.size(); i++)
        {
            string u = equations[i][0];
            string v = equations[i][1];
            
            if(tab[u]==0) tab[u] = ++st;
            if(tab[v]==0) tab[v] = ++st;
            
            int uu = tab[u], vv = tab[v];
            dis[uu][vv] = values[i];
            dis[vv][uu] = 1.0/values[i];
        }
        
        run(); vector<double>ans;
        
        for(int i=0; i<queries.size(); i++)
        {
            string u = queries[i][0];
            string v = queries[i][1];
            
            if(tab[u]==0) tab[u] = ++st;
            if(tab[v]==0) tab[v] = ++st;
            
            int uu = tab[u], vv = tab[v];
            
            if(dis[uu][vv]==inf) ans.push_back(-1.0);
            else ans.push_back(dis[uu][vv]);
        }
        
        return ans;
    }
    
    void init(void)
    {
        for(int i=0; i<MX; i++)
        {
            for(int j=0; j<MX; j++)
            {
                 dis[i][j] = inf;
            }
        }
    }
    
    void run(void)
    {
        for(int k=0; k<MX; k++)
        {
            for(int i=0; i<MX; i++)
            {
                for(int j=0; j<MX; j++)
                {
                    if(dis[i][k]!=inf && dis[k][j]!=inf)
                        dis[i][j] = dis[i][k] * dis[k][j];
                }
            }
        }
    }
};
