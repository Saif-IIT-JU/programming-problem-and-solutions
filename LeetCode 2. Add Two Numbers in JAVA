/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode root = null, curr = null;
        int carry = 0;
        
        while(true){
            if(l1==null && l2==null) break;
            
            int p = 0, q = 0;
            if(l1!=null){
                p = l1.val; l1 = l1.next;
            }
            if(l2!=null)
            {
                q = l2.val; l2 = l2.next;
            }
            
            int tot = carry + p + q; carry = tot/10; tot = tot%10;
            
            if(root==null)
            {
                root = new ListNode(tot);
                curr = root;
            }
            else
            {
                curr.next = new ListNode(tot); curr = curr.next;
            }
        }
        
        if(carry>0)
        {
            curr.next = new ListNode(carry); curr = curr.next;
        }
        curr = null; return root;
    }
}
