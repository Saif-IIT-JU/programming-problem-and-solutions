/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int> >ans;
        if(root==NULL) return ans;
        queue<pair<TreeNode*,int> >q;
        q.push({root, 0}); int currLevel = 0;
        vector<int>vals;
        
        while(!q.empty())
        {
            pair<TreeNode*,int> u = q.front(); q.pop();
            if(currLevel==u.second) vals.push_back(u.first->val);
            else{
                ans.push_back(vals);vals.clear();
                vals.push_back(u.first->val); currLevel = u.second;
            }
            
            if(u.first->left!=NULL) q.push({u.first->left, u.second+1});
            if(u.first->right!=NULL) q.push({u.first->right, u.second+1});
        }
        
        if(vals.size()>0) ans.push_back(vals);
        
        return ans;
    }
};
