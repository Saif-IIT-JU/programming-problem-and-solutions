/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode head, int k) {
        int N = 0; ListNode curr = head;
        while(curr!=null){
            N++; curr = curr.next;
        }
        
        int m = N/k, r = N%k, cnt = 0;
        ListNode ans[] = new ListNode[k];
        if(head==null) return ans;
        
        curr = head;
        for(int i=0; i<k; i++)
        {
            int need = m; if(i<r) need++;
            ans[i] = curr;
            ListNode prev=null, next = curr;
            while(need-->0)
            {
                if(next!=null)
                {
                    prev = next; next = next.next;
                }
            }
            if(prev!=null) prev.next = null;
            curr = next;
        }
        
        return ans;
    }
}
